-----------------------------------------------------------------------------------------------------------------------
setRequiredNumber:
-----------------------------------------------------------------------------------------------------------------------

Input space: 0 <= nemployee and 0 <= starttime and 0 <= endtime

Partition #1: nemployee = 0 and starttime > endtime
test_m_part1: input: "nemployee = 0, starttime = 1, endtime = 0", expected: the schedule is unchanged

Partition #2: nemployee = 0 and starttime = endtime
test_m_part2: input: "nemployee = 0, starttime = 0, endtime = 0", expected: requiredNumber is set to nemployee AND workingEmployees keeps a number of employees equal to nemployee, discarding the rest AND the rest of the schedule is unchanged

Partition #3: nemployee = 0 and starttime < endtime
test_m_part3: input: "nemployee = 0, starttime = 0, endtime = 1", expected: requiredNumber is set to nemployee AND workingEmployees keeps a number of employees equal to nemployee, discarding the rest AND the rest of the schedule is unchanged

Partition #4: nemployee >= 1 and starttime > endtime
test_m_part4: input: "nemployee = 2, starttime = 1, endtime = 0", expected: the schedule is unchanged

Partition #5: nemployee >= 1 and starttime = endtime
test_m_part5: input: "nemployee = 2, starttime = 0, endtime = 0", expected: requiredNumber is set to nemployee AND workingEmployees is unchanged AND the rest of the schedule is unchanged

Partition #6: nemployee >= 1 and starttime < endtime
test_m_part6: input: "nemployee = 2, starttime = 0, endtime = 1", expected: requiredNumber is set to nemployee AND workingEmployees is unchanged AND the rest of the schedule is unchanged

Found bugs: None

-----------------------------------------------------------------------------------------------------------------------
nextIncomplete:
-----------------------------------------------------------------------------------------------------------------------

Input space: 0 <= currentTime and currentTime < size

Partition #1: currentTime = 0
test_m_part1: input: "currentTime = 0", expected: returns the time of the hour closest to currentTime such that the length of workingEmployees is less that requiredNumber

Partition #2: currentTime >= 1 and currentTime < size
test_m_part2: input: "currentTime = 5", expected: returns the time of the hour closest to currentTime such that the length of workingEmployees is less that requiredNumber

Found bugs: If constructor of WorkSchedule is called with a number <= endtime, nextIncomplete throws an IndexOutOfBoundsException